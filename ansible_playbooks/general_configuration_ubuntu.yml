---
- hosts: all
  vars_files:
    - ../env_variables

  tasks:
    - name: Add Docker apt-key to repository
      apt_key:
          url: https://download.docker.com/linux/ubuntu/gpg
          state: present
      tags:
        - general_config_ubuntu

    - name: Add Kubernetes apt-key to repository
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present
      tags:
        - general_config_ubuntu

    - name: Add Docker repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu bionic stable
        state: present
        filename: 'docker'
      tags:
        - general_config_ubuntu

    - name: Add Kubernetes repository
      apt_repository:
        repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
        state: present
        filename: 'kubernetes'
      tags:
        - general_config_ubuntu

    - name: Install required packages
      apt:
       name: "{{ ubuntu_packages }}"
       state: latest
       update_cache: yes
      tags:
        - general_config_ubuntu

    - name: Install system updates
      apt:
        name: "*"
        state: latest
        update_cache: yes
      tags:
        - general_config_ubuntu

    - name: Set firewall rules
      shell: |
        firewall-cmd --permanent --add-port=6443/tcp
        firewall-cmd --permanent --add-port=2379-2380/tcp
        firewall-cmd --permanent --add-port=10250/tcp
        firewall-cmd --permanent --add-port=10251/tcp
        firewall-cmd --permanent --add-port=10252/tcp
        firewall-cmd --permanent --add-port=10255/tcp
        firewall-cmd --reload
        modprobe br_netfilter
        echo '1' > /proc/sys/net/bridge/bridge-nf-call-iptables
      tags:
        - general_config_ubuntu

    - name: Restart server
      reboot:
        reboot_timeout: 3600
      tags:
        - general_config_ubuntu

    - name: Check connectivity
      ping:
      tags:
        - general_config_ubuntu

    - name: Check docker is running
      shell: systemctl status docker | head -n 3 | tail -n 1 | awk '{ print $2 $3 }'
      register: docker_status
      tags:
        - general_config_ubuntu

    - name: Docker status
      debug:
       msg:  "{{ docker_status.stdout_lines }}"
      tags:
        - general_config_ubuntu